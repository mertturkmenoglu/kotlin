package projectEuler.p002_EvenFibonacciNumbers

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 */
fun main() {
    val result = findFibonacciSum(upperLimit = 4_000_000)
    println(result)
}

fun findFibonacciSum(upperLimit: Int): Long {
    var sum: Long = 2
    var first = 1
    var second = 2
    var third = first + second

    while (third < upperLimit) {
        if (third % 2 == 0)
            sum += third

        first = second
        second = third
        third = first + second
    }

    return sum
}